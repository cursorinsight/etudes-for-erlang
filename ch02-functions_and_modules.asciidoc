[[FUNCTIONSMODULES]]
Functions and Modules
---------------------

NOTE: You can learn more about working with functions and modules in Chapters 2, 3, and 9 of _Erlang Programming_, Chapter 3 of _Programming Erlang_, Sections 2.3, 2.5, and 2.7 of _Erlang and OTP in Action_, and Chapters 2 and 3 of _Learn You Some Erlang For Great Good!_.  There's more on documentation in Chapter 18 of _Erlang Programming_ and types in Chapter 30 of _Learn You Some Erlang For Great Good!_.

[[CH02-ET01]]
Étude 2-1: Writing a Function
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Write a module with a function that takes the length and width of a
rectangle and returns (yields) its area.  Name the module `geom`, and
name the function `area`. The function has arity 2, because it needs
two pieces of information to make the calculation. In Erlang-speak: 
write function `area/2`.

Here is some sample output.

[source, erlang]
----
1> c(geom).
{ok,geom}
2> geom:area(3,4).
12
3> geom:area(12,7).
84
----

link:code/ch02-01[See a suggested solution here.]

[[CH02-ET02]]
Étude 2-2: Documenting a Module
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Document the `geom` module you wrote in <<CH02-ET01,Étude 2-1>>.

link:code/ch02-02[See a suggested solution here.]

[[CH02-ET03]]
Étude 2-3: Documenting a Function
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Document the `area/2` function, and create an _overview.edoc_ file to complete
the documentation of the application you've written.

link:code/ch02-03[See a suggested solution here.]
